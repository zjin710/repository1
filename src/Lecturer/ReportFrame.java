/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
package Lecturer;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.io.IOException;
    public class ReportFrame extends javax.swing.JFrame {
        /**
         * Creates new form ReportFrame
         * @param StudentID the StudentID to be set
         * @param ProjectID The ProjectID to be set
         * @param IntakeID The IntakeID to be set
         */
        // First constructor
        public ReportFrame(String StudentID, String ProjectID) {
            initComponents();
            findAndSetData(StudentID, ProjectID);
            findAndSetReport();
        }

        // Second constructor
        public ReportFrame(String StudentID, String IntakeID, String ProjectID) {
            initComponents();
            findAndSetData(StudentID, ProjectID);
            findAndSetReport();
            ButtonUpdate.setVisible(false);
            TextFieldCGPA.setEditable(false);
            TextFieldFeedback.setEditable(false);
        }
        private void findAndSetData(String studentID, String projectID) {
            //Read textfile
            String filename = "Presentation.txt";

            try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
                String line;
                // Loop through each line in the file
                while ((line = br.readLine()) != null) {
                    // Check if the current line contains the specified and ProjectID
                    if (line.contains(studentID) && line.contains(projectID)) {
                        String[] parts = line.split(",");
                        // Set the values of the labels and text fields
                        LabelStudentIDANS.setText(parts[0]);
                        LabelNameANS.setText(parts[1]);
                        LabelIntakeIDANS.setText(parts[2]);
                        LabelProjectIDANS.setText(parts[3]);
                        TextFieldCGPA.setText(parts[9]);
                        TextFieldFeedback.setText(parts[10].replace("$", ","));
                        break;
                    }
                }
            } catch (IOException e) {
                // Catch and print IO exceptions
                e.printStackTrace();
            }
        }

        private void findAndSetReport() {
            String filename = "lorep.txt";

            try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
                String line = br.readLine(); // Read the first line
                if (line != null) {
                    TextFieldReportAnswer.setText(line);
                    TextFieldReportAnswer.setEditable(false); // Set the text field to be non-editable
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelName = new javax.swing.JLabel();
        LabelTitle1 = new javax.swing.JLabel();
        ButtonBack = new javax.swing.JButton();
        LabelIntakeID = new javax.swing.JLabel();
        LabelStudentID = new javax.swing.JLabel();
        LabelCGPA = new javax.swing.JLabel();
        LabelProjectID = new javax.swing.JLabel();
        LabelCGPA1 = new javax.swing.JLabel();
        TextFieldCGPA = new javax.swing.JTextField();
        ButtonUpdate = new javax.swing.JButton();
        LabelStudentIDANS = new javax.swing.JLabel();
        LabelNameANS = new javax.swing.JLabel();
        LabelIntakeIDANS = new javax.swing.JLabel();
        LabelProjectIDANS = new javax.swing.JLabel();
        LabelReportAnswer = new javax.swing.JLabel();
        TextFieldFeedback = new javax.swing.JTextField();
        TextFieldReportAnswer = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        LabelName.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelName.setText("Name:");

        LabelTitle1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        LabelTitle1.setText("Report");

        ButtonBack.setText("Back");
        ButtonBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackActionPerformed(evt);
            }
        });

        LabelIntakeID.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelIntakeID.setText("IntakeID:");

        LabelStudentID.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelStudentID.setText("StudentID:");

        LabelCGPA.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelCGPA.setText("CGPA (0.00 - 4.00):");

        LabelProjectID.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelProjectID.setText("ProjectID:");

        LabelCGPA1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelCGPA1.setText("Feedback:");

        TextFieldCGPA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TextFieldCGPA.setText("NULL");
        TextFieldCGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldCGPAActionPerformed(evt);
            }
        });

        ButtonUpdate.setText("Update");
        ButtonUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdateActionPerformed(evt);
            }
        });

        LabelStudentIDANS.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelStudentIDANS.setText("StudentID");

        LabelNameANS.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelNameANS.setText("Name");

        LabelIntakeIDANS.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelIntakeIDANS.setText("IntakeID");

        LabelProjectIDANS.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelProjectIDANS.setText("ProjectID");

        LabelReportAnswer.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N
        LabelReportAnswer.setText("Report Answer:");

        TextFieldFeedback.setText("NULL");

        TextFieldReportAnswer.setText("NULL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelTitle1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelStudentID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelStudentIDANS))
                            .addComponent(LabelCGPA1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelCGPA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextFieldCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelIntakeID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelIntakeIDANS))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelProjectID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelProjectIDANS))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelNameANS)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TextFieldFeedback, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(ButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelReportAnswer)
                            .addComponent(TextFieldReportAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(LabelTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelStudentID)
                    .addComponent(LabelStudentIDANS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelName)
                    .addComponent(LabelNameANS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelIntakeID)
                    .addComponent(LabelIntakeIDANS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelProjectID)
                    .addComponent(LabelProjectIDANS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCGPA)
                    .addComponent(TextFieldCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCGPA1)
                    .addComponent(LabelReportAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldReportAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackActionPerformed
        // TODO add your handling code here:
        // Dispose of the current frame
        dispose();
    }//GEN-LAST:event_ButtonBackActionPerformed

    private void ButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdateActionPerformed
        // TODO add your handling code here:
        // Get the tpNumber and projectID from the label
        String tpNumber = LabelStudentIDANS.getText();
        String projectID = LabelProjectIDANS.getText();
        //Call method
        updateData(tpNumber,projectID);
    }//GEN-LAST:event_ButtonUpdateActionPerformed

    private void TextFieldCGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldCGPAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldCGPAActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentHidden
  
    private void updateData(String tpNumber, String projectID) {
        //Read the textfile
        String filename = "Presentation.txt";
        List<String> updatedLines = new ArrayList<>();
        
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            
            while ((line = br.readLine()) != null) {
                //Split each line with commas
                String[] data = line.split(",");
                // Check if tpNumber and projectID match
                if (data[0].equals(tpNumber) && data[3].equals(projectID)) {
                    // Update CGPA and feedback information
                    data[9] = TextFieldCGPA.getText();
                    data[10] = TextFieldFeedback.getText().replace(",", "$");
                    // Validate the CGPA
                    if (!isValidCGPA(data[9])) {
                        return;
                    }
                    // Reassemble the updated data into a line
                    line = String.join(",", data);
                }
                updatedLines.add(line);
            }
        } catch (IOException e) {
            //Catch and print any IO exceptions
            e.printStackTrace();
            return;
        }
        // Write the updated content back to the file
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(filename))) {
            for (String updatedLine : updatedLines) {
               bw.write(updatedLine);
               bw.newLine();
            }
            JOptionPane.showMessageDialog(null, "Data updated successfully!", "Updated", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            //Catch and print any IO exceptions
            e.printStackTrace();
        }
    }
    
    private boolean isValidCGPA(String cgpa) {
        // Try to convert the CGPA string to a double value
        try {
            double cgpaValue = Double.parseDouble(cgpa);
            // Check if the CGPA is within the valid range (0.00 to 4.00)
            if (cgpaValue < 0.00 || cgpaValue > 4.00) {
                // If the CGPA is invalid, show a warning message dialog
                JOptionPane.showMessageDialog(null, "Invalid CGPA: Please enter a valid number between 0.00 and 4.00, please review your input and try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid CGPA: Please enter a valid number between 0.00 and 4.00, please review your input and try again.", "Invalid Input", JOptionPane.WARNING_MESSAGE);
            return false; 
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ReportFrame("StudentID","ProjectID").setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBack;
    private javax.swing.JButton ButtonUpdate;
    private javax.swing.JLabel LabelCGPA;
    private javax.swing.JLabel LabelCGPA1;
    private javax.swing.JLabel LabelIntakeID;
    private javax.swing.JLabel LabelIntakeIDANS;
    private javax.swing.JLabel LabelName;
    private javax.swing.JLabel LabelNameANS;
    private javax.swing.JLabel LabelProjectID;
    private javax.swing.JLabel LabelProjectIDANS;
    private javax.swing.JLabel LabelReportAnswer;
    private javax.swing.JLabel LabelStudentID;
    private javax.swing.JLabel LabelStudentIDANS;
    private javax.swing.JLabel LabelTitle1;
    private javax.swing.JTextField TextFieldCGPA;
    private javax.swing.JTextField TextFieldFeedback;
    private javax.swing.JTextField TextFieldReportAnswer;
    // End of variables declaration//GEN-END:variables
}
